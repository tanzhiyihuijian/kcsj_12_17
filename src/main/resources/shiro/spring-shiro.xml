<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd">

    <description>shiro configuration</description>

    <!-- shiro's main business-tier object for web-enabled applications -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="myShiroRealm" />
        <property name="cacheManager" ref="cacheManager" />
    </bean>

    <!-- 项目自定义的 Realm -->
    <bean id="myShiroRealm" class="cn.com.dom4j.base.shiro.MyShiroRealm">
        <property name="cacheManager" ref="cacheManager" />
    </bean>

    <!-- 用户授权信息 cache -->
    <bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" />

    <!-- shiro filter -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager" />

        <!-- 没有登陆的用户请求需要登陆的页面时, 自动跳转到登录页面, 可配置也可不配置 -->
        <property name="loginUrl" value="/shiro/login.jhtml" />

        <!-- 登陆成功默认跳转的页面, 不配置则跳转至 '/', 一般可以不配置, 直接通过代码进行处理  -->
        <property name="successUrl" value="/shiro/login-success.jhtml" />

        <!-- 没有权限默认跳转的页面 -->
        <property name="unauthorizedUrl" value="/shiro/error.jhtml" />
        <property name="filterChainDefinitions">
            <value>
                /shiro/index.jhtml = authc
                /shiro/login.jhtml = anon
                /shiro/check-login.json = anon
                /shiro/login-success.jhtml = anon
                /shiro/logout.json = anon
                /shiro/** = authc
            </value>
        </property>
    </bean>

    <!-- 保证实现了 shiro内部 lifecycle函数的 bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

    <!-- AOP方式级权限检查 -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true" />
    </bean>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager" />
    </bean>





</beans>